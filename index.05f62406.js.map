{"mappings":"AAAO,MAAMA,EAAO,CAElBC,iBAAkBC,SAASC,cAAc,mBAGzCC,aAAcF,SAASC,cAAc,mBACrCE,UAAWH,SAASC,cAAc,kBAClCG,SAAUJ,SAASC,cAAc,aACjCI,SAAUL,SAASC,cAAc,eCGnCK,eAAeC,IACb,aAAaC,MAAM,mGAChBC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GACGA,EAAKC,UAEbC,OAAMC,IACLC,QAAQD,MACN,sDACAA,EACD,G,CAyBPX,eAAea,EAAkBC,GAC/B,aAAaZ,MAAM,sCAAqBY,8CACrCX,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GACGA,IAERE,OAAMC,IACLC,QAAQD,MACN,sDACAA,EACD,G,EAnCPX,iBACE,aAAaE,MAAM,0FAChBC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GACGA,EAAKO,SAEbL,OAAMC,IACLC,QAAQD,MACN,sDACAA,EACD,G,ECXP,GAAsBR,MAAKY,IACvBd,IAAuBE,MAAKK,IACxB,IAAIQ,EA/BZ,SAA+BR,EAAMS,GACjC,GAAoB,IAAhBT,EAAKU,OAGT,OAAOV,EACFW,KAAI,EAAGC,GAAAC,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYC,UAAEA,MAC1C,IAAIC,EAAUF,EAAaG,MAAM,EAAG,GAChCZ,EAAS,GACb,IAAK,IAAIa,KAAYH,EAAW,CAC5B,IAAII,EAAQZ,EAAaa,MAAK,EAACV,GAAEA,KAASA,IAAOQ,IACjDb,EAAOgB,KAAKF,EAAMG,K,CAMtB,OAJIjB,EAAOG,QAAU,IACjBH,EAAS,CAACA,EAAO,GAAIA,EAAO,GAAI,UAG7B,2DACqCM,sGACwBE,WAAqBD,gGAElDA,6GALtBP,EAAOkB,KAAK,2FAQsCP,8EAG7D,IAAIO,KAAK,G,CAKNC,CAAsB1B,EAAMO,GACzCvB,EAAKC,iBAAiB0C,mBAAmB,YAAanB,EAAO,GAC/D,ICjCN,SAASoB,GAAkBhB,GAAEA,EAAEL,OAAEA,EAAMsB,eAAEA,EAAcC,SAAEA,EAAQC,WAAEA,EAAUhB,YAAEA,EAAWD,MAAEA,EAAKkB,aAAEA,EAAYC,WAAEA,IAC7G,IAAIzB,EAAS,6IAEmEO,wBACjED,2JAKuBA,sSAOoBkB,iCACxCC,yLAMWF,2KAKAF,kKAKAtB,kLAMKuB,sCAKlC9C,EAAKK,UAAUsC,mBAAmB,aAAcnB,GAChDxB,EAAKM,SAAS4C,UAAUC,OAAO,aAC/BnD,EAAKO,SAAS6C,iBAAiB,QAASC,E,CAG7B,SAAAA,EAAwBC,GACnC,MACMC,EADcD,EAAEE,OAAOC,QAAQ,MACTC,QAAQ9B,GAEpC1B,SAASyD,oBAAoB,QAASN,GACrChC,EAAkBkC,GACd5C,KAAKiC,E,CAKC,SAAAS,IACXrD,EAAKM,SAAS4C,UAAUU,IAAI,aAC5B5D,EAAKK,UAAUwD,UAAY,GAC3B3D,SAASkD,iBAAiB,QAASC,E,CALvCrD,EAAKI,aAAagD,iBAAiB,QAASC","sources":["src/js/refs.js","src/js/API/fetch-film-api.js","src/js/films-render.js","src/js/_open-md-info-film.js"],"sourcesContent":["export const refs = {\n  // list film\n  popularMovieList: document.querySelector('.home-film-list'),\n\n  // MODAL \n  listOfMovies: document.querySelector('.home-film-list'),\n  bodyModal: document.querySelector('.wrapper-modal'),\n  backDrop: document.querySelector('.backdrop'),\n  closeBtn: document.querySelector('.close-btn'),\n};","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cf961b1b89f4c4a28558be2b04fdd59a';\nconst page = 1;\n\nexport {\n  fetchPopularFilmsAPI,\n  fetchGenresFilmsAPI,\n  fetchMovieInfoAPI,\n};\n\n// fetch information about popular movies\nasync function fetchPopularFilmsAPI() {\n  return await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.results;\n    })\n    .catch(error => {\n      console.error(\n        'There has been a problem with your fetch operation:',\n        error\n      );\n    });\n};\n\n// fetch id and names ganre for movies\nasync function fetchGenresFilmsAPI() {\n  return await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.genres;\n    })\n    .catch(error => {\n      console.error(\n        'There has been a problem with your fetch operation:',\n        error\n      );\n    });\n};\n\n// fetch for all information for movie\nasync function fetchMovieInfoAPI(movie_id) {\n  return await fetch(`${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data;\n    })\n    .catch(error => {\n      console.error(\n        'There has been a problem with your fetch operation:',\n        error\n      );\n    });\n};\n","import { fetchPopularFilmsAPI, fetchGenresFilmsAPI } from './API/fetch-film-api';\nimport { refs } from './refs';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n// function for render film list markup \nfunction createFilmListFMarkup(data, genres_names) {\n    if (data.length === 0) {\n        return;\n    }\n    return data\n        .map(({ id, title, poster_path, release_date, genre_ids }) => {\n            let release = release_date.slice(0, 4);\n            let genres = [];\n            for (let genre_id of genre_ids) {\n                let genre = genres_names.find(({ id }) => id === genre_id);\n                genres.push(genre.name);\n            };\n            if (genres.length >= 3) {\n                genres = [genres[0], genres[1], 'Other'];\n            };\n            let genres_str = genres.join(', ');\n            return `\n            <li class=\"film-list__item item\" data-id=\"${id}\">\n                <img class=\"film-link__img\" width=\"500px\" src=\"${BASE_IMG_URL}${poster_path}\" alt=\"${title}\">\n                <div class=\"wrapper\">\n                    <h3 class=\"film-link__title\">${title}</h3>\n                    <div class=\"film-link__grup\">\n                        <p class=\"film-genres\">${genres_str}</p>\n                        <p class=\"film-year\"><span class=\"film-line\">|</span>${release}</p>\n                    </div>\n                </div>\n            </li>`;}).join('');\n};\n\nfetchGenresFilmsAPI().then(genres => {\n    fetchPopularFilmsAPI().then(data => {\n        let markup = createFilmListFMarkup(data, genres);\n        refs.popularMovieList.insertAdjacentHTML('beforeend', markup);\n    });\n});","import { refs } from './refs';\nimport { fetchMovieInfoAPI } from './API/fetch-film-api';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n// function for render modal markup \nfunction createModalMarkup({ id, genres, original_title, overview, popularity, poster_path, title, vote_average, vote_count }) {\n    let markup = `\n    <div class=\"film-modal__poster\">\n        <img class='film-modal__img' width=\"375\" height=\"478\" src=\"${BASE_IMG_URL}${poster_path}\"\n            alt=\"${title}\" />\n    </div>\n    \n    <div class=\"film-modal__details-info details-info\">\n        <!-- Title -->\n        <h2 class=\"details-info__title\">${title}</h2>\n    \n        <ul class=\"details-info__list-static list-static list\">\n    \n            <li class=\"list-static__item\">\n                <p class=\"info-film-txt\">Vote / Votes</p>\n                <p class=\"item-vote-rez\">\n                    <span class=\"tem-vote-rez--accent-mode\">${vote_average}</span>\n                    ${vote_count}\n                </p>\n            </li>\n    \n            <li class=\"list-static__item\">\n                <p class=\"info-film-txt\">Popularity</p>\n                <p class='rez'>${popularity}</p>\n            </li>\n    \n            <li class=\"list-static__item\">\n                <p class=\"info-film-txt\">Original Title</p>\n                <p class=\"rez\">${original_title}</p>\n            </li>\n    \n            <li class=\"list-static__item\">\n                <p class=\"info-film-txt\">Genre</p>\n                <p class='rez'>${genres}</p>\n            </li>\n        </ul>\n    \n        <div class=\"details-info__group\">\n            <p class=\"rez rez-margin\">about</p>\n            <p class=\"rez rez-desc\">${overview}</p>\n        </div>\n\n    </div>`;\n    \n    refs.bodyModal.insertAdjacentHTML('afterBegin', markup);\n    refs.backDrop.classList.remove('is-hidden');\n    refs.closeBtn.addEventListener('click', closeMovieModalWindow);\n};\n\nexport default function openMovieModal(e) {\n    const movieCardEl = e.target.closest('li');\n    const movieId = movieCardEl.dataset.id;\n\n    document.removeEventListener('click', openMovieModal);\n     fetchMovieInfoAPI(movieId)\n        .then(createModalMarkup);\n}\n \nrefs.listOfMovies.addEventListener('click', openMovieModal);\n\nexport default function closeMovieModalWindow() {\n    refs.backDrop.classList.add('is-hidden');\n    refs.bodyModal.innerHTML = '';\n    document.addEventListener('click', openMovieModal);\n}"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","popularMovieList","document","querySelector","listOfMovies","bodyModal","backDrop","closeBtn","async","$69f33d7e8356cda7$export$acdc96c760d6ecbe","fetch","then","response","ok","Error","json","data","results","catch","error","console","$69f33d7e8356cda7$export$6e8ceb3d3ef2d13d","movie_id","genres","markup","genres_names","length","map","id","id1","title","poster_path","release_date","genre_ids","release","slice","genre_id","genre","find","push","name","join","$667dedb86a4f7555$var$createFilmListFMarkup","insertAdjacentHTML","$58370b073d19670c$var$createModalMarkup","original_title","overview","popularity","vote_average","vote_count","classList","remove","addEventListener","$58370b073d19670c$export$2e2bcd8739ae039","e","movieId","target","closest","dataset","removeEventListener","add","innerHTML"],"version":3,"file":"index.05f62406.js.map"}